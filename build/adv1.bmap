################################################################################
# MAP FILE
# generated file: DO NOT EDIT!
################################################################################

/Users/chrisg/github/basic-adventure/src/main.bas
2049,2116,1,0,65              # 1 REM text adventure game by chris garrett 2025 retrogamecoders.com
2117,2143,2,2,24              # 2 REM set up variables etc
2144,2153,3,3,10              # 3 GOSUB 181
2154,2177,4,6,21              # 4 REM show room details
2178,2187,5,7,12              # 5 GOSUB 179
2188,2263,6,8,96              # 6 IF PL=0 THEN pl = PP : REM player location can not be 00 as that is inventory
2264,2325,7,9,91              # 7 PP = PL : REM backup the location in case illegal move made
2326,2347,8,10,21             # 8 PRINT RV$+LO$(PL)+RO$
2348,2356,9,11,8              # 9 PRINT ""
2357,2375,10,12,25            # 10 IF PL=5 THEN gosub 165
2376,2404,11,13,28            # 11 PRINT "Objects visible:"+LB$
2405,2488,12,14,106           # 12 FOR I = 0 TO OC-1 : REM check object locations from the first object to object count
2489,2571,13,15,91            # 13 IF OL(I) = PL THEN PRINT ". ";OB$(I) : REM if the object is in current location print it
2572,2579,14,16,6             # 14 NEXT I
2580,2588,15,17,8             # 15 PRINT ""
2589,2621,16,18,32            # 16 PRINT WT$+"exits available:"+LB$
2622,2652,17,19,28            # 17 REM check each possible exit
2653,2693,18,20,47            # 18 IF MID$(EX$(PL),1,2)<>"00" THEN PRINT ". north"
2694,2733,19,21,46            # 19 IF MID$(EX$(PL),3,2)<>"00" THEN PRINT ". east"
2734,2774,20,22,47            # 20 IF MID$(EX$(PL),5,2)<>"00" THEN PRINT ". south"
2775,2814,21,23,46            # 21 IF MID$(EX$(PL),7,2)<>"00" THEN PRINT ". west"
2815,2852,22,24,44            # 22 IF MID$(EX$(PL),9,2)<>"00" THEN PRINT ". up"
2853,2893,23,25,47            # 23 IF MID$(EX$(PL),11,2)<>"00" THEN PRINT ". down"
2894,2903,24,29,5             # 24 I$=""
2904,2912,25,30,8             # 25 PRINT ""
2913,2938,26,31,25            # 26 PRINT YL$+"what now?"+LB$
2939,2947,27,32,8             # 27 INPUT I$
2948,2976,28,33,42            # 28 IF LEFT$(I$,3) = "go " THEN gosub 47
2977,2998,29,34,30            # 29 IF I$ = "n" THEN gosub 51
2999,3020,30,35,30            # 30 IF I$ = "e" THEN gosub 51
3021,3042,31,36,30            # 31 IF I$ = "s" THEN gosub 51
3043,3064,32,37,30            # 32 IF I$ = "w" THEN gosub 51
3065,3086,33,38,30            # 33 IF I$ = "u" THEN gosub 51
3087,3108,34,39,30            # 34 IF I$ = "d" THEN gosub 51
3109,3135,35,40,41            # 35 IF LEFT$(I$,1) = "i" THEN gosub 63
3136,3165,36,41,44            # 36 IF LEFT$(I$,4) = "get " THEN gosub 78
3166,3196,37,42,46            # 37 IF LEFT$(I$,5) = "take " THEN gosub 74
3197,3224,38,43,36            # 38 IF LEFT$(I$,1) = "h" THEN gosub 147
3225,3255,39,44,43            # 39 IF LEFT$(I$,4) = "quit" THEN gosub 312
3256,3286,40,45,43            # 40 IF LEFT$(I$,4) = "exit" THEN gosub 312
3287,3317,41,46,46            # 41 IF LEFT$(I$,5) = "drop " THEN gosub 98
3318,3352,42,47,52            # 42 IF LEFT$(I$,8) = "examine " THEN gosub 112
3353,3416,43,48,85            # 43 IF LEFT$(I$,4) = "look" OR LEFT$(I$,1) = "l" THEN ?"":PRINT RD$(PL):?"":GOSUB 70
3417,3444,44,49,39            # 44 IF LEFT$(I$,1) = "q" THEN goto 312
3445,3475,45,50,44            # 45 IF LEFT$(I$,4) = "use " THEN gosub 126
3476,3483,46,52,16            # 46 GOTO 4
3484,3535,47,55,49            # 47 REM fully written out move (eg. GO SOUTH or GO S)
3536,3554,48,56,17            # 48 D$ = MID$(I$,4,1)
3555,3563,49,57,11            # 49 GOSUB 55
3564,3569,50,58,6             # 50 RETURN
3570,3600,51,61,28            # 51 REM abbreviated move (eg. N)
3601,3612,52,62,7             # 52 D$ = I$
3613,3621,53,63,11            # 53 GOSUB 55
3622,3627,54,64,6             # 54 RETURN
3628,3668,55,68,38            # 55 REM go to the new player location (PL)
3669,3708,56,69,44            # 56 IF D$ = "n" THEN pl = VAL(MID$(EX$(PL),1,2))
3709,3748,57,70,44            # 57 IF D$ = "e" THEN pl = VAL(MID$(EX$(PL),3,2))
3749,3788,58,71,44            # 58 IF D$ = "s" THEN pl = VAL(MID$(EX$(PL),5,2))
3789,3828,59,72,44            # 59 IF D$ = "w" THEN pl = VAL(MID$(EX$(PL),7,2))
3829,3868,60,73,44            # 60 IF D$ = "u" THEN pl = VAL(MID$(EX$(PL),9,2))
3869,3909,61,74,45            # 61 IF D$ = "d" THEN pl = VAL(MID$(EX$(PL),11,2))
3910,3915,62,76,6             # 62 RETURN
3916,3952,63,79,34            # 63 REM objects the player is carrying
3953,3961,64,80,8             # 64 PRINT ""
3962,3997,65,81,35            # 65 PRINT "Objects in your possession:"
3998,4080,66,82,105           # 66 FOR I = 0 TO OC-1 : REM check object location from the first object to object count
4081,4150,67,83,79            # 67 IF OL(I) = 0 THEN PRINT ". ";OB$(I) : REM if the object is in zero print it
4151,4158,68,84,6             # 68 NEXT I
4159,4167,69,85,8             # 69 PRINT ""
4168,4228,70,88,60            # 70 PRINT CY$+RV$+"        press a key to continue         "+RO$
4229,4237,71,90,6             # 71 GET I$
4238,4254,72,91,27            # 72 IF I$="" GOTO 71
4255,4260,73,92,6             # 73 RETURN
4261,4292,74,95,29            # 74 REM alternative action to get
4293,4307,75,96,10            # 75 F=-1:R$=""
4308,4351,76,97,52            # 76 R$ = MID$(I$,6) : REM r$ is object requested
4352,4360,77,98,13            # 77 GOTO 81
4361,4424,78,101,61           # 78 REM allow player to get available object and put in inventory
4425,4439,79,102,10           # 79 F=-1:R$=""
4440,4483,80,103,52           # 80 R$ = MID$(I$,5) : REM r$ is object requested
4484,4507,81,106,21           # 81 REM get the object id
4508,4524,82,107,15           # 82 FOR I = 1 TO OC
4525,4564,83,108,41           # 83 IF OB$(I-1) = R$ THEN f=I : REM it exists
4565,4572,84,109,6            # 84 NEXT I
4573,4593,85,111,18           # 85 REM can't find it?
4594,4602,86,112,8            # 86 PRINT ""
4603,4679,87,113,92           # 87 IF F=-1 THEN PRINT "can't see that here, check spelling and be specific?" : GOTO 95
4680,4703,88,114,29           # 88 IF OL(F-1)=PL THEN goto 92
4704,4754,89,115,66           # 89 IF OL(F-1)=0 THEN PRINT "you already have that" : GOTO 95
4755,4791,90,116,36           # 90 PRINT "I can't see that around here"
4792,4800,91,117,16           # 91 GOTO 95
4801,4869,92,120,66           # 92 OL(F-1)=0 : REM set the object location to inventory aka room zero
4870,4878,93,121,8            # 93 PRINT ""
4879,4905,94,122,26           # 94 PRINT "got the ";OBJ$(F-1)
4906,4914,95,125,8            # 95 PRINT ""
4915,4923,96,126,13           # 96 GOSUB 70
4924,4929,97,127,6            # 97 RETURN
4930,4971,98,131,39           # 98 REM drop objects the player is carrying
4972,4986,99,133,10           # 99 F=-1:R$=""
4987,5030,100,134,52          # 100 R$ = MID$(I$,6) : REM r$ is object requested
5031,5054,101,136,21          # 101 REM get the object id
5055,5071,102,137,15          # 102 FOR I = 1 TO OC
5072,5111,103,138,41          # 103 IF OB$(I-1) = R$ THEN f=I : REM it exists
5112,5119,104,139,6           # 104 NEXT I
5120,5140,105,141,18          # 105 REM can't find it?
5141,5149,106,142,8           # 106 PRINT ""
5150,5231,107,143,97          # 107 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 110
5232,5287,108,144,71          # 108 IF OL(F-1)=0 THEN PRINT "ok, dropped!" : OL(F-1)=PL : GOTO 110
5288,5334,109,145,46          # 109 PRINT "no can do, are you sure you have that?"
5335,5343,110,149,13          # 110 GOSUB 70
5344,5349,111,150,6           # 111 RETURN
5350,5394,112,153,42          # 112 REM examine objects the player is carrying
5395,5409,113,155,10          # 113 F=-1:R$=""
5410,5453,114,156,52          # 114 R$ = MID$(I$,9) : REM r$ is object requested
5454,5477,115,158,21          # 115 REM get the object id
5478,5494,116,159,15          # 116 FOR I = 1 TO OC
5495,5534,117,160,41          # 117 IF OB$(I-1) = R$ THEN f=I : REM it exists
5535,5542,118,161,6           # 118 NEXT I
5543,5563,119,163,18          # 119 REM can't find it?
5564,5572,120,164,8           # 120 PRINT ""
5573,5654,121,165,98          # 121 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 124
5655,5691,122,166,53          # 122 IF OL(F-1)=0 THEN PRINT OD$(F-1) : GOTO 124
5692,5738,123,167,46          # 123 PRINT "no can do, are you sure you have that?"
5739,5747,124,171,13          # 124 GOSUB 70
5748,5753,125,172,6           # 125 RETURN
5754,5796,126,175,40          # 126 REM use an object the player is carrying
5797,5811,127,177,10          # 127 F=-1:R$=""
5812,5855,128,178,52          # 128 R$ = MID$(I$,5) : REM r$ is object requested
5856,5879,129,180,21          # 129 REM get the object id
5880,5896,130,181,15          # 130 FOR I = 1 TO OC
5897,5936,131,182,41          # 131 IF OB$(I-1) = R$ THEN f=I : REM it exists
5937,5944,132,183,6           # 132 NEXT I
5945,5965,133,185,18          # 133 REM can't find it?
5966,5974,134,186,8           # 134 PRINT ""
5975,6056,135,187,94          # 135 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 138
6057,6088,136,188,54          # 136 IF OL(F-1)=0 THEN gosub 140 : GOTO 138
6089,6135,137,189,46          # 137 PRINT "no can do, are you sure you have that?"
6136,6144,138,193,13          # 138 GOSUB 70
6145,6150,139,194,6           # 139 RETURN
6151,6182,140,198,29          # 140 REM actions for using objects
6183,6309,141,199,152         # 141 IF F=1 AND PL=3 THEN PRINT "boom! the furnace explodes, filling the room with fire and smoke!":GOSUB 70:GOSUB 312: REM matches in furnace room
6310,6519,142,200,230         # 142 IF F=1 AND PL=2 THEN PRINT "suddenly the furnace roars to life, filling the room with heat and light!":EX$(2)="010604000300":M=M-1: IF M<=0 THEN PRINT "You are out of matches":OL(F-1)=-1: RETURN : REM remove matches from inventory
6520,6701,143,201,197         # 143 IF F=1 AND PL <> 2 THEN PRINT "you strike a match and light it, illuminating the room for a moment.":M=M-1: IF M<=0 THEN PRINT "You are out of matches":OL(F-1)=-1: REM remove matches from inventory
6702,6816,144,202,122         # 144 IF F=2 AND PL=4 THEN PRINT "click! the door has unlocked!":EX$(4)="020005000000":OL(F-1)=-1: REM remove key from inventory
6817,6899,145,203,88          # 145 IF F=2 AND PL<>4 THEN PRINT "you try to use the key, but it doesn't fit any locks here."
6900,6905,146,204,6           # 146 RETURN
6906,6928,147,207,20          # 147 REM show help screen
6929,6938,148,208,15          # 148 GOSUB 174
6939,6956,149,209,17          # 149 PRINT "Commands:"
6957,7001,150,210,44          # 150 PRINT "  North, South, East, West, Up, Down"
7002,7030,151,211,28          # 151 PRINT "  (n, s, e, w, u, d)"
7031,7039,152,212,8           # 152 PRINT ""
7040,7077,153,213,37          # 153 PRINT "  get <object>, take <object>"
7078,7101,154,214,23          # 154 PRINT "  drop <object>"
7102,7128,155,215,26          # 155 PRINT "  examine <object>"
7129,7143,156,216,14          # 156 PRINT "  look"
7144,7166,157,217,22          # 157 PRINT "  i, inventory"
7167,7184,158,218,17          # 158 PRINT "  h, help"
7185,7208,159,219,23          # 159 PRINT "  q, quit, exit"
7209,7217,160,220,8           # 160 PRINT ""
7218,7281,161,221,63          # 161 PRINT "Type the command you want to use, or type 'h' for help."
7282,7290,162,222,8           # 162 PRINT ""
7291,7299,163,223,13          # 163 GOSUB 70
7300,7305,164,224,6           # 164 RETURN
7306,7327,165,227,19          # 165 REM show win screen
7328,7337,166,229,15          # 166 GOSUB 174
7338,7399,167,230,61          # 167 PRINT "Congratulations! You have escaped the   murder house!"
7400,7408,168,231,8           # 168 PRINT ""
7409,7518,169,232,109         # 169 PRINT "now you know where the exit is feel free to go back in and explore, just do not hang around too long!"
7519,7527,170,233,8           # 170 PRINT ""
7528,7536,171,234,13          # 171 GOSUB 70
7537,7546,172,235,12          # 172 GOSUB 179
7547,7552,173,236,6           # 173 RETURN
7553,7590,174,240,35          # 174 REM clear screen and set up colours
7591,7634,175,241,47          # 175 POKE 53281,6 : POKE 53280,6: REM screen colours
7635,7680,176,242,49          # 176 LB$=CHR$(154): WT$=CHR$(5): REM light blue, white
7681,7726,177,243,49          # 177 YL$=CHR$(158): CY$=CHR$(159): REM yellow and cyan
7727,7834,178,244,120         # 178 RV$=CHR$(18): RO$=CHR$(146): BL$=CHR$(13) + CHR$(187) + CHR$(32): REM reverse on and off to make listing the code easier
7835,7892,179,247,73          # 179 PRINT WT$: PRINT CHR$(147): PRINT CHR$(19);: REM clear screen, white text
7893,7898,180,248,6           # 180 RETURN
7899,7936,181,253,35          # 181 REM set up the game and the display
7937,7946,182,254,15          # 182 GOSUB 174
7947,7974,183,256,25          # 183 REM objects and locations
7975,8002,184,257,25          # 184 REM =====================
8003,8016,185,258,11          # 185 REM objects
8017,8044,186,259,25          # 186 OC = 2 : REM object count
8045,8058,187,260,11          # 187 DIM OB$(OC)
8059,8121,188,261,60          # 188 OB$(0)="matches": M=6 : REM matches, 6 in inventory to start
8122,8138,189,262,12          # 189 OB$(1)="key"
8139,8164,190,264,23          # 190 REM object descriptions
8165,8178,191,265,11          # 191 DIM OD$(OC)
8179,8274,192,266,91          # 192 OD$(0)="a small book of promotional matches advertising patty's bar and grill, north lakes"
8275,8328,193,267,49          # 193 OD$(1)="a large and heavy key made out of brass."
8329,8344,194,269,13          # 194 REM locations
8345,8370,195,270,23          # 195 RC = 6 : REM room count
8371,8384,196,271,11          # 196 DIM LO$(RC)
8385,8407,197,272,18          # 197 LO$(0)="inventory"
8408,8434,198,273,22          # 198 LO$(1)="dank basement"
8435,8460,199,274,21          # 199 LO$(2)="furnace room"
8461,8487,200,275,22          # 200 LO$(3)="service hatch"
8488,8514,201,276,22          # 201 LO$(4)="a store room?"
8515,8545,202,277,26          # 202 LO$(5)="outside the house"
8546,8576,203,278,26          # 203 LO$(6)="cramped stairwell"
8577,8706,204,281,128         # 204 REM room descriptions                          :                                       :                                       
8707,8720,205,282,11          # 205 DIM RD$(RC)
8721,8734,206,283,9           # 206 RD$(0)=""
8735,8891,207,284,152         # 207 RD$(1)="a chillingly damp, bare-bricked room    with poured cement floor and timber     beamed ceiling. window frames are       boarded along one wall."
8892,9063,208,285,167         # 208 RD$(2)="this room is obviously a later addition, thrown together with drywall, and just large enough to section off the furnace from the main basement. you smell gas."
9064,9235,209,286,167         # 209 RD$(3)="up above the furnace, this tiny space   must have been built to allow access to hvac ducting. the smell of gas is strong here, and the furnace hums ominously."
9236,9401,210,287,161         # 210 RD$(4)="the dark and dusty room is empty, with  a single light bulb hanging from the    ceiling. there is an old wooden door on the far wall covered in cobwebs."
9402,9494,211,288,88          # 211 RD$(5)="outside the house, you can see the front door and a path leading to the street."
9495,9580,212,289,81          # 212 RD$(6)="a tiny, twisty stairwell that was       previously obscured by the dark."
9581,9605,213,293,22          # 213 REM object's locations
9606,9638,214,294,30          # 214 REM loc 0 = player's inventory
9639,9651,215,295,10          # 215 DIM OL(OC)
9652,9717,216,296,63          # 216 OL(0)=0 : REM matches are in inventory at the start of the game
9718,9757,217,297,37          # 217 OL(1)=6 : REM key is in the stairwell
9758,9774,218,299,14          # 218 REM exit names
9775,9787,219,300,10          # 219 DIM EN$(6)
9788,9806,220,301,14          # 220 EN$(0)="north"
9807,9824,221,302,13          # 221 EN$(1)="east"
9825,9843,222,303,14          # 222 EN$(2)="south"
9844,9861,223,304,13          # 223 EN$(3)="west"
9862,9877,224,305,11          # 224 EN$(4)="up"
9878,9895,225,306,13          # 225 EN$(5)="down"
9896,9912,226,309,14          # 226 REM room exits
9913,9934,227,310,19          # 227 REM     N E S W U D
9935,9948,228,311,11          # 228 DIM EX$(20)
9949,9974,229,312,21          # 229 EX$(1)="000002000000"
9975,10000,230,313,21         # 230 EX$(2)="010004000300"
10001,10026,231,314,21        # 231 EX$(3)="000000000002"
10027,10052,232,315,21        # 232 EX$(4)="020000000000"
10053,10078,233,316,21        # 233 EX$(5)="040000000000"
10079,10104,234,317,21        # 234 EX$(6)="000000020000"
10105,10117,235,320,10        # 235 REM player
10118,10130,236,321,10        # 236 REM ======
10131,10161,237,322,28        # 237 PL = 1 : REM player location
10162,10201,238,323,37        # 238 PP = 1 : REM player previous location
10202,10222,239,327,18        # 239 REM welcome screen
10223,10232,240,328,15        # 240 GOSUB 174
10233,10242,241,329,11        # 241 GOSUB 257
10243,10276,242,331,29        # 242 ? "             murder house"
10277,10315,243,332,34        # 243 ? "         a text adventure game"
10316,10351,244,333,31        # 244 ? "           by chris garrett"
10352,10381,245,334,25        # 245 ? "                 2025"
10382,10389,246,335,3         # 246 ?""
10390,10399,247,336,5         # 247 ? LG$
10400,10437,248,337,33        # 248 ? "          retrogamecoders.com"
10438,10445,249,338,3         # 249 ?""
10446,10492,250,339,42        # 250 ?" press h for help or other key to start"
10493,10500,251,340,3         # 251 ?""
10501,10509,252,343,6         # 252 GET I$
10510,10529,253,344,34        # 253 IF I$="" THEN goto 252
10530,10550,254,345,25        # 254 IF I$="h" THEN gosub 147
10551,10581,255,346,37        # 255 IF I$ <> "h" AND I$ <> "" THEN RETURN
10582,10587,256,347,6         # 256 RETURN
10588,10627,257,350,47        # 257 FOR I = 0 TO 999: READ C:POKE 1024+I,C : NEXT I
10628,10792,258,351,163       # 258 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
10793,10957,259,352,163       # 259 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
10958,11122,260,353,163       # 260 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
11123,11287,261,354,163       # 261 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
11288,11452,262,355,163       # 262 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 85, 73, 32, 32, 32, 32, 32, 32, 32, 32, 32, 71, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
11453,11617,263,356,163       # 263 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 74, 75, 32, 32, 32, 32, 32,233,223, 32, 32, 93, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
11618,11782,264,357,163       # 264 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,233,105, 95,223, 32, 71, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
11783,11947,265,358,163       # 265 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,233,105, 78, 77, 95,223,208, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
11948,12112,266,359,163       # 266 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,233,105, 78, 85, 73, 77, 95,234, 32, 32, 32, 85, 73, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
12113,12277,267,360,163       # 267 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 85, 73, 32, 32, 32,236, 32, 32, 74, 75, 32, 32,251, 32, 32, 85, 85, 73, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
12278,12442,268,361,163       # 268 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 85, 32, 73, 85, 73, 32, 97,112,110, 32, 32,112,110,225, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
12443,12607,269,362,163       # 269 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 97,109,125, 32, 32,109,125,225, 32,104, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
12608,12772,270,363,163       # 270 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,104, 92, 32, 97,112,110, 79, 80,112,110,225,104,102,104, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
12773,12937,271,364,163       # 271 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,102,102,102, 92, 97,109,125,116,103,109,125,225,102,102,102,102, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
12938,13102,272,365,163       # 272 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,102,102, 32, 32,104,104,104,104,160,120,104,104,104,104, 32,102,102, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
13103,13267,273,366,163       # 273 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,104,104,104,104,104,248,120,104,104,104,104,104, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
13268,13432,274,367,163       # 274 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,104,104,104,104,104,104,104,120,160,104,104,104,104,104,104, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
13433,13597,275,368,163       # 275 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,160,120, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
13598,13762,276,369,163       # 276 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
13763,13927,277,370,163       # 277 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32,112,114, 73, 32, 32, 85, 73, 32, 93, 85, 73, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
13928,14092,278,371,163       # 278 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 93, 93, 93, 72, 66, 32, 85, 93,107, 75, 85, 73, 32, 93, 93, 85, 73, 93, 72, 85, 73, 85, 73, 32, 32, 32, 32, 32, 32, 32
14093,14257,279,372,163       # 279 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 32, 93, 74, 75, 93, 32, 74,125, 74, 75, 66, 32, 32,107,115, 93, 93, 93, 72, 74, 73,107, 75, 32, 32, 32, 32, 32, 32, 32
14258,14422,280,373,163       # 280 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 93, 74, 75, 74, 75, 74, 75, 74, 75, 32, 32, 32, 32, 32, 32, 32
14423,14587,281,374,163       # 281 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
14588,14752,282,375,163       # 282 DATA 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
14753,14770,283,377,15        # 283 REM colour data
14771,14811,284,378,48        # 284 FOR I = 0 TO 999: READ C:POKE 55296+I,C : NEXT I
14812,14976,285,379,163       # 285 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
14977,15141,286,380,163       # 286 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
15142,15306,287,381,163       # 287 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
15307,15471,288,382,163       # 288 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
15472,15636,289,383,163       # 289 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 10, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
15637,15800,290,384,163       # 290 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 14, 14, 14, 14, 14, 15, 12, 14, 14, 8, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
15801,15964,291,385,163       # 291 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 12, 12, 14, 2, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
15965,16129,292,386,163       # 292 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
16130,16293,293,387,163       # 293 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 12, 12, 12, 12, 14, 14, 14, 1, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
16294,16455,294,388,163       # 294 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1, 15, 14, 14, 14, 15, 14, 14, 12, 11, 14, 14, 11, 14, 14, 1, 1, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
16456,16618,295,389,163       # 295 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1, 14, 15, 1, 15, 14, 15, 15, 12, 14, 14, 15, 12, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
16619,16783,296,390,163       # 296 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 12, 11, 14, 14, 12, 11, 11, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
16784,16946,297,391,163       # 297 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 5, 14, 12, 15, 12, 12, 11, 15, 12, 11, 11, 14, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
16947,17105,298,392,163       # 298 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 5, 5, 5, 12, 10, 2, 11, 11, 10, 2, 11, 11, 11, 14, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
17106,17264,299,393,163       # 299 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 5, 14, 14, 14, 5, 5, 14, 10, 10, 14, 5, 5, 14, 14, 14, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
17265,17421,300,394,163       # 300 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 5, 5, 5, 14, 8, 8, 14, 5, 5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
17422,17576,301,395,163       # 301 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 5, 5, 5, 5, 14, 2, 2, 14, 5, 5, 5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
17577,17739,302,396,163       # 302 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 2, 2, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
17740,17904,303,397,163       # 303 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
17905,18061,304,398,163       # 304 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 1, 1, 1, 14, 14, 1, 1, 14, 1, 1, 1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
18062,18215,305,399,163       # 305 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 10, 10, 10, 10, 10, 10, 14, 10, 10, 10, 10, 10, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 14, 14, 14, 14, 14, 14
18216,18375,306,400,163       # 306 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 2, 14, 2, 2, 2, 2, 14, 10, 10, 10, 10, 10, 14, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 14, 14, 14, 14, 14, 14
18376,18530,307,401,163       # 307 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 14, 14, 14, 14, 14, 14
18531,18695,308,402,163       # 308 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
18696,18859,309,403,162       # 309 DATA 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1
18860,18868,310,405,13        # 310 GOSUB 70
18869,18874,311,406,6         # 311 RETURN
18875,18884,312,409,12        # 312 GOSUB 179
18885,18911,313,410,28        # 313 POKE 53281,6 : POKE 53280,14
18912,18928,314,411,16        # 314 PRINT "Goodbye!"
18929,18937,315,412,8         # 315 PRINT ""
18938,18962,316,413,26        # 316 PRINT "memory free",FRE(0)
18963,18971,317,414,8         # 317 PRINT ""
