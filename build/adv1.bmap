################################################################################
# MAP FILE
# generated file: DO NOT EDIT!
################################################################################

/Users/chrisg/github/basic-adventure/src/main.bas
2049,2116,1,0,65              # 1 REM text adventure game by chris garrett 2024 retrogamecoders.com
2117,2143,2,2,24              # 2 REM set up variables etc
2144,2153,3,3,10              # 3 GOSUB 178
2154,2177,4,6,21              # 4 REM show room details
2178,2187,5,7,12              # 5 GOSUB 176
2188,2263,6,8,96              # 6 IF PL=0 THEN pl = PP : REM player location can not be 00 as that is inventory
2264,2325,7,9,91              # 7 PP = PL : REM backup the location in case illegal move made
2326,2347,8,10,21             # 8 PRINT RV$+LO$(PL)+RO$
2348,2356,9,11,8              # 9 PRINT ""
2357,2375,10,12,25            # 10 IF PL=5 THEN gosub 163
2376,2404,11,13,28            # 11 PRINT "Objects visible:"+LB$
2405,2488,12,14,106           # 12 FOR I = 0 TO OC-1 : REM check object locations from the first object to object count
2489,2571,13,15,91            # 13 IF OL(I) = PL THEN PRINT ". ";OB$(I) : REM if the object is in current location print it
2572,2579,14,16,6             # 14 NEXT I
2580,2588,15,17,8             # 15 PRINT ""
2589,2621,16,18,32            # 16 PRINT WT$+"exits available:"+LB$
2622,2652,17,19,28            # 17 REM check each possible exit
2653,2693,18,20,47            # 18 IF MID$(EX$(PL),1,2)<>"00" THEN PRINT ". north"
2694,2733,19,21,46            # 19 IF MID$(EX$(PL),3,2)<>"00" THEN PRINT ". east"
2734,2774,20,22,47            # 20 IF MID$(EX$(PL),5,2)<>"00" THEN PRINT ". south"
2775,2814,21,23,46            # 21 IF MID$(EX$(PL),7,2)<>"00" THEN PRINT ". west"
2815,2852,22,24,44            # 22 IF MID$(EX$(PL),9,2)<>"00" THEN PRINT ". up"
2853,2893,23,25,47            # 23 IF MID$(EX$(PL),11,2)<>"00" THEN PRINT ". down"
2894,2903,24,29,5             # 24 I$=""
2904,2912,25,30,8             # 25 PRINT ""
2913,2938,26,31,25            # 26 PRINT YL$+"what now?"+LB$
2939,2947,27,32,8             # 27 INPUT I$
2948,2976,28,33,42            # 28 IF LEFT$(I$,3) = "go " THEN gosub 47
2977,2998,29,34,30            # 29 IF I$ = "n" THEN gosub 51
2999,3020,30,35,30            # 30 IF I$ = "e" THEN gosub 51
3021,3042,31,36,30            # 31 IF I$ = "s" THEN gosub 51
3043,3064,32,37,30            # 32 IF I$ = "w" THEN gosub 51
3065,3086,33,38,30            # 33 IF I$ = "u" THEN gosub 51
3087,3108,34,39,30            # 34 IF I$ = "d" THEN gosub 51
3109,3135,35,40,41            # 35 IF LEFT$(I$,1) = "i" THEN gosub 63
3136,3165,36,41,44            # 36 IF LEFT$(I$,4) = "get " THEN gosub 78
3166,3196,37,42,46            # 37 IF LEFT$(I$,5) = "take " THEN gosub 74
3197,3224,38,43,36            # 38 IF LEFT$(I$,1) = "h" THEN gosub 145
3225,3255,39,44,43            # 39 IF LEFT$(I$,4) = "quit" THEN gosub 246
3256,3286,40,45,43            # 40 IF LEFT$(I$,4) = "exit" THEN gosub 246
3287,3317,41,46,46            # 41 IF LEFT$(I$,5) = "drop " THEN gosub 98
3318,3352,42,47,52            # 42 IF LEFT$(I$,8) = "examine " THEN gosub 112
3353,3400,43,48,64            # 43 IF LEFT$(I$,4) = "look" THEN ?"":PRINT RD$(PL):?"":GOSUB 70
3401,3428,44,49,39            # 44 IF LEFT$(I$,1) = "q" THEN goto 246
3429,3459,45,50,44            # 45 IF LEFT$(I$,4) = "use " THEN gosub 126
3460,3467,46,52,16            # 46 GOTO 4
3468,3519,47,55,49            # 47 REM fully written out move (eg. GO SOUTH or GO S)
3520,3538,48,56,17            # 48 D$ = MID$(I$,4,1)
3539,3547,49,57,11            # 49 GOSUB 55
3548,3553,50,58,6             # 50 RETURN
3554,3584,51,61,28            # 51 REM abbreviated move (eg. N)
3585,3596,52,62,7             # 52 D$ = I$
3597,3605,53,63,11            # 53 GOSUB 55
3606,3611,54,64,6             # 54 RETURN
3612,3652,55,68,38            # 55 REM go to the new player location (PL)
3653,3692,56,69,44            # 56 IF D$ = "n" THEN pl = VAL(MID$(EX$(PL),1,2))
3693,3732,57,70,44            # 57 IF D$ = "e" THEN pl = VAL(MID$(EX$(PL),3,2))
3733,3772,58,71,44            # 58 IF D$ = "s" THEN pl = VAL(MID$(EX$(PL),5,2))
3773,3812,59,72,44            # 59 IF D$ = "w" THEN pl = VAL(MID$(EX$(PL),7,2))
3813,3852,60,73,44            # 60 IF D$ = "u" THEN pl = VAL(MID$(EX$(PL),9,2))
3853,3893,61,74,45            # 61 IF D$ = "d" THEN pl = VAL(MID$(EX$(PL),11,2))
3894,3899,62,76,6             # 62 RETURN
3900,3936,63,79,34            # 63 REM objects the player is carrying
3937,3945,64,80,8             # 64 PRINT ""
3946,3981,65,81,35            # 65 PRINT "Objects in your possession:"
3982,4064,66,82,105           # 66 FOR I = 0 TO OC-1 : REM check object location from the first object to object count
4065,4134,67,83,79            # 67 IF OL(I) = 0 THEN PRINT ". ";OB$(I) : REM if the object is in zero print it
4135,4142,68,84,6             # 68 NEXT I
4143,4151,69,85,8             # 69 PRINT ""
4152,4212,70,88,60            # 70 PRINT CY$+RV$+"        press a key to continue         "+RO$
4213,4221,71,90,6             # 71 GET I$
4222,4238,72,91,27            # 72 IF I$="" GOTO 71
4239,4244,73,92,6             # 73 RETURN
4245,4276,74,95,29            # 74 REM alternative action to get
4277,4291,75,96,10            # 75 F=-1:R$=""
4292,4335,76,97,52            # 76 R$ = MID$(I$,6) : REM r$ is object requested
4336,4344,77,98,13            # 77 GOTO 81
4345,4408,78,101,61           # 78 REM allow player to get available object and put in inventory
4409,4423,79,102,10           # 79 F=-1:R$=""
4424,4467,80,103,52           # 80 R$ = MID$(I$,5) : REM r$ is object requested
4468,4491,81,106,21           # 81 REM get the object id
4492,4508,82,107,15           # 82 FOR I = 1 TO OC
4509,4548,83,108,41           # 83 IF OB$(I-1) = R$ THEN f=I : REM it exists
4549,4556,84,109,6            # 84 NEXT I
4557,4577,85,111,18           # 85 REM can't find it?
4578,4586,86,112,8            # 86 PRINT ""
4587,4663,87,113,92           # 87 IF F=-1 THEN PRINT "can't see that here, check spelling and be specific?" : GOTO 95
4664,4687,88,114,29           # 88 IF OL(F-1)=PL THEN goto 92
4688,4738,89,115,66           # 89 IF OL(F-1)=0 THEN PRINT "you already have that" : GOTO 95
4739,4775,90,116,36           # 90 PRINT "I can't see that around here"
4776,4784,91,117,16           # 91 GOTO 95
4785,4853,92,120,66           # 92 OL(F-1)=0 : REM set the object location to inventory aka room zero
4854,4862,93,121,8            # 93 PRINT ""
4863,4889,94,122,26           # 94 PRINT "got the ";OBJ$(F-1)
4890,4898,95,125,8            # 95 PRINT ""
4899,4907,96,126,13           # 96 GOSUB 70
4908,4913,97,127,6            # 97 RETURN
4914,4955,98,131,39           # 98 REM drop objects the player is carrying
4956,4970,99,133,10           # 99 F=-1:R$=""
4971,5014,100,134,52          # 100 R$ = MID$(I$,6) : REM r$ is object requested
5015,5038,101,136,21          # 101 REM get the object id
5039,5055,102,137,15          # 102 FOR I = 1 TO OC
5056,5095,103,138,41          # 103 IF OB$(I-1) = R$ THEN f=I : REM it exists
5096,5103,104,139,6           # 104 NEXT I
5104,5124,105,141,18          # 105 REM can't find it?
5125,5133,106,142,8           # 106 PRINT ""
5134,5215,107,143,97          # 107 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 110
5216,5271,108,144,71          # 108 IF OL(F-1)=0 THEN PRINT "ok, dropped!" : OL(F-1)=PL : GOTO 110
5272,5318,109,145,46          # 109 PRINT "no can do, are you sure you have that?"
5319,5327,110,149,13          # 110 GOSUB 70
5328,5333,111,150,6           # 111 RETURN
5334,5378,112,153,42          # 112 REM examine objects the player is carrying
5379,5393,113,155,10          # 113 F=-1:R$=""
5394,5437,114,156,52          # 114 R$ = MID$(I$,9) : REM r$ is object requested
5438,5461,115,158,21          # 115 REM get the object id
5462,5478,116,159,15          # 116 FOR I = 1 TO OC
5479,5518,117,160,41          # 117 IF OB$(I-1) = R$ THEN f=I : REM it exists
5519,5526,118,161,6           # 118 NEXT I
5527,5547,119,163,18          # 119 REM can't find it?
5548,5556,120,164,8           # 120 PRINT ""
5557,5638,121,165,98          # 121 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 124
5639,5675,122,166,53          # 122 IF OL(F-1)=0 THEN PRINT OD$(F-1) : GOTO 124
5676,5722,123,167,46          # 123 PRINT "no can do, are you sure you have that?"
5723,5731,124,171,13          # 124 GOSUB 70
5732,5737,125,172,6           # 125 RETURN
5738,5780,126,175,40          # 126 REM use an object the player is carrying
5781,5795,127,177,10          # 127 F=-1:R$=""
5796,5839,128,178,52          # 128 R$ = MID$(I$,5) : REM r$ is object requested
5840,5863,129,180,21          # 129 REM get the object id
5864,5880,130,181,15          # 130 FOR I = 1 TO OC
5881,5920,131,182,41          # 131 IF OB$(I-1) = R$ THEN f=I : REM it exists
5921,5928,132,183,6           # 132 NEXT I
5929,5949,133,185,18          # 133 REM can't find it?
5950,5958,134,186,8           # 134 PRINT ""
5959,6040,135,187,94          # 135 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 138
6041,6072,136,188,54          # 136 IF OL(F-1)=0 THEN gosub 140 : GOTO 138
6073,6119,137,189,46          # 137 PRINT "no can do, are you sure you have that?"
6120,6128,138,193,13          # 138 GOSUB 70
6129,6134,139,194,6           # 139 RETURN
6135,6166,140,198,29          # 140 REM actions for using objects
6167,6338,141,199,185         # 141 IF F=1 THEN PRINT "you strike a match and light it, illuminating the room for a moment.":M=M-1: IF M<=0 THEN PRINT "You are out of matches":OL(F-1)=-1: REM remove matches from inventory
6339,6455,142,200,126         # 142 IF F=2 THEN IF PL=4 THEN PRINT "click! the door has unlocked!":EX$(4)="020005000000":OL(F-1)=-1: REM remove key from inventory
6456,6540,143,201,92          # 143 IF F=2 THEN IF PL<>4 THEN PRINT "you try to use the key, but it doesn't fit any locks here."
6541,6546,144,203,6           # 144 RETURN
6547,6569,145,206,20          # 145 REM show help screen
6570,6579,146,207,15          # 146 GOSUB 171
6580,6597,147,208,17          # 147 PRINT "Commands:"
6598,6642,148,209,44          # 148 PRINT "  North, South, East, West, Up, Down"
6643,6671,149,210,28          # 149 PRINT "  (n, s, e, w, u, d)"
6672,6680,150,211,8           # 150 PRINT ""
6681,6718,151,212,37          # 151 PRINT "  get <object>, take <object>"
6719,6742,152,213,23          # 152 PRINT "  drop <object>"
6743,6769,153,214,26          # 153 PRINT "  examine <object>"
6770,6784,154,215,14          # 154 PRINT "  look"
6785,6807,155,216,22          # 155 PRINT "  i, inventory"
6808,6825,156,217,17          # 156 PRINT "  h, help"
6826,6849,157,218,23          # 157 PRINT "  q, quit, exit"
6850,6858,158,219,8           # 158 PRINT ""
6859,6922,159,220,63          # 159 PRINT "Type the command you want to use, or type 'h' for help."
6923,6931,160,221,8           # 160 PRINT ""
6932,6940,161,222,13          # 161 GOSUB 70
6941,6946,162,223,6           # 162 RETURN
6947,6968,163,226,19          # 163 REM show win screen
6969,6978,164,228,15          # 164 GOSUB 171
6979,7038,165,229,59          # 165 PRINT "Congratulations! You have escaped the murder house!"
7039,7047,166,230,8           # 166 PRINT ""
7048,7157,167,231,109         # 167 PRINT "now you know where the exit is feel free to go back in and explore, just do not hang around too long!"
7158,7166,168,232,8           # 168 PRINT ""
7167,7175,169,233,13          # 169 GOSUB 70
7176,7181,170,234,6           # 170 RETURN
7182,7219,171,238,35          # 171 REM clear screen and set up colours
7220,7263,172,239,47          # 172 POKE 53281,6 : POKE 53280,6: REM screen colours
7264,7309,173,240,49          # 173 LB$=CHR$(154): WT$=CHR$(5): REM light blue, white
7310,7355,174,241,49          # 174 YL$=CHR$(158): CY$=CHR$(159): REM yellow and cyan
7356,7463,175,242,120         # 175 RV$=CHR$(18): RO$=CHR$(146): BL$=CHR$(13) + CHR$(187) + CHR$(32): REM reverse on and off to make listing the code easier
7464,7521,176,245,73          # 176 PRINT WT$: PRINT CHR$(147): PRINT CHR$(19);: REM clear screen, white text
7522,7527,177,246,6           # 177 RETURN
7528,7565,178,251,35          # 178 REM set up the game and the display
7566,7575,179,252,15          # 179 GOSUB 171
7576,7603,180,254,25          # 180 REM objects and locations
7604,7631,181,255,25          # 181 REM =====================
7632,7645,182,256,11          # 182 REM objects
7646,7673,183,257,25          # 183 OC = 2 : REM object count
7674,7687,184,258,11          # 184 DIM OB$(OC)
7688,7750,185,259,60          # 185 OB$(0)="matches": M=6 : REM matches, 6 in inventory to start
7751,7767,186,260,12          # 186 OB$(1)="key"
7768,7793,187,262,23          # 187 REM object descriptions
7794,7807,188,263,11          # 188 DIM OD$(OC)
7808,7903,189,264,91          # 189 OD$(0)="a small book of promotional matches advertising patty's bar and grill, north lakes"
7904,7957,190,265,49          # 190 OD$(1)="a large and heavy key made out of brass."
7958,7973,191,267,13          # 191 REM locations
7974,7999,192,268,23          # 192 RC = 5 : REM room count
8000,8013,193,269,11          # 193 DIM LO$(RC)
8014,8036,194,270,18          # 194 LO$(0)="inventory"
8037,8063,195,271,22          # 195 LO$(1)="dank basement"
8064,8089,196,272,21          # 196 LO$(2)="furnace room"
8090,8116,197,273,22          # 197 LO$(3)="service hatch"
8117,8143,198,274,22          # 198 LO$(4)="another room?"
8144,8174,199,275,26          # 199 LO$(5)="outside the house"
8175,8198,200,277,21          # 200 REM room descriptions
8199,8212,201,278,11          # 201 DIM RD$(RC)
8213,8226,202,279,9           # 202 RD$(0)=""
8227,8370,203,280,139         # 203 RD$(1)="a chillingly damp, bare-bricked room with poured cement floor and timber beamed ceiling. window frames are boarded along one wall."
8371,8527,204,281,152         # 204 RD$(2)="this room is obviously a later addition, thrown together with drywall, and just large enough to section off the furnace from the main basement."
8528,8632,205,282,100         # 205 RD$(3)="up above the furnace, this tiny space must have been built to allow access to hvac ducting."
8633,8794,206,283,157         # 206 RD$(4)="the dark and dusty room is empty, with a single light bulb hanging from the ceiling. there is an old wooden door on the far wall covered in cobwebs."
8795,8887,207,284,88          # 207 RD$(5)="outside the house, you can see the front door and a path leading to the street."
8888,8912,208,288,22          # 208 REM object's locations
8913,8945,209,289,30          # 209 REM loc 0 = player's inventory
8946,8958,210,290,10          # 210 DIM OL(OC)
8959,8970,211,291,7           # 211 OL(0)=0
8971,8982,212,292,7           # 212 OL(1)=1
8983,8999,213,294,14          # 213 REM exit names
9000,9012,214,295,10          # 214 DIM EN$(6)
9013,9031,215,296,14          # 215 EN$(0)="north"
9032,9049,216,297,13          # 216 EN$(1)="east"
9050,9068,217,298,14          # 217 EN$(2)="south"
9069,9086,218,299,13          # 218 EN$(3)="west"
9087,9102,219,300,11          # 219 EN$(4)="up"
9103,9120,220,301,13          # 220 EN$(5)="down"
9121,9137,221,304,14          # 221 REM room exits
9138,9159,222,305,19          # 222 REM     N E S W U D
9160,9173,223,306,11          # 223 DIM EX$(20)
9174,9199,224,307,21          # 224 EX$(1)="000002000000"
9200,9225,225,308,21          # 225 EX$(2)="010004000300"
9226,9251,226,309,21          # 226 EX$(3)="000000000002"
9252,9277,227,310,21          # 227 EX$(4)="020000000000"
9278,9303,228,311,21          # 228 EX$(5)="040000000000"
9304,9316,229,314,10          # 229 REM player
9317,9329,230,315,10          # 230 REM ======
9330,9360,231,316,28          # 231 PL = 1 : REM player location
9361,9400,232,317,37          # 232 PP = 1 : REM player previous location
9401,9410,233,321,15          # 233 GOSUB 171
9411,9444,234,322,29          # 234 ? "             murder house"
9445,9483,235,323,34          # 235 ? "         a text adventure game"
9484,9519,236,324,31          # 236 ? "           by chris garrett"
9520,9549,237,325,25          # 237 ? "                 2025"
9550,9557,238,326,3           # 238 ?""
9558,9567,239,327,5           # 239 ? LG$
9568,9605,240,328,33          # 240 ? "          retrogamecoders.com"
9606,9613,241,329,3           # 241 ?""
9614,9621,242,330,3           # 242 ?""
9622,9629,243,331,3           # 243 ?""
9630,9638,244,333,13          # 244 GOSUB 70
9639,9644,245,335,6           # 245 RETURN
9645,9654,246,338,12          # 246 GOSUB 176
9655,9681,247,339,28          # 247 POKE 53281,6 : POKE 53280,14
9682,9698,248,340,16          # 248 PRINT "Goodbye!"
9699,9707,249,341,8           # 249 PRINT ""
9708,9718,250,342,12          # 250 PRINT FRE(0)
9719,9727,251,343,8           # 251 PRINT ""
