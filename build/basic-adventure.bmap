################################################################################
# MAP FILE
# generated file: DO NOT EDIT!
################################################################################

/home/chrisg/github/basic-adventure/src/main.bas
2049,2077,1,0,28              # 1 ? "{147}text adventure game"
2078,2086,2,2,10              # 2 GOSUB 56
2087,2110,3,5,42              # 3 PRINT "{147}{18}";LO$(PL);" {146}"
2111,2119,4,6,8               # 4 PRINT ""
2120,2144,5,7,24              # 5 PRINT "Objects visible:"
2145,2228,6,8,106             # 6 FOR I = 0 TO OC-1 : REM check object locations from the first object to object count
2229,2311,7,9,91              # 7 IF OL(I) = PL THEN PRINT ". ";OB$(I) : REM if the object is in current location print it
2312,2319,8,10,6              # 8 NEXT I
2320,2328,9,11,8              # 9 PRINT ""
2329,2353,10,12,24            # 10 PRINT "exits available:"
2354,2384,11,13,28            # 11 REM check each possible exit
2385,2425,12,14,47            # 12 IF MID$(EX$(PL),1,2)<>"00" THEN PRINT ". north"
2426,2465,13,15,46            # 13 IF MID$(EX$(PL),3,2)<>"00" THEN PRINT ". east"
2466,2506,14,16,47            # 14 IF MID$(EX$(PL),5,2)<>"00" THEN PRINT ". south"
2507,2546,15,17,46            # 15 IF MID$(EX$(PL),7,2)<>"00" THEN PRINT ". west"
2547,2584,16,18,44            # 16 IF MID$(EX$(PL),9,2)<>"00" THEN PRINT ". up"
2585,2625,17,19,47            # 17 IF MID$(EX$(PL),11,2)<>"00" THEN PRINT ". down"
2626,2635,18,23,5             # 18 I$=""
2636,2644,19,24,8             # 19 PRINT ""
2645,2662,20,25,17            # 20 PRINT "what now?"
2663,2671,21,26,8             # 21 INPUT I$
2672,2700,22,27,42            # 22 IF LEFT$(I$,3) = "go " THEN GOSUB 31
2701,2722,23,28,30            # 23 IF I$ = "n" THEN GOSUB 35
2723,2744,24,29,30            # 24 IF I$ = "e" THEN GOSUB 35
2745,2766,25,30,30            # 25 IF I$ = "s" THEN GOSUB 35
2767,2788,26,31,30            # 26 IF I$ = "w" THEN GOSUB 35
2789,2810,27,32,30            # 27 IF I$ = "u" THEN GOSUB 35
2811,2832,28,33,30            # 28 IF I$ = "d" THEN GOSUB 35
2833,2859,29,34,41            # 29 IF LEFT$(I$,1) = "i" THEN GOSUB 47
2860,2867,30,37,16            # 30 GOTO 3
2868,2919,31,40,49            # 31 REM fully written out move (eg. GO SOUTH or GO S)
2920,2938,32,41,17            # 32 D$ = MID$(I$,4,1)
2939,2947,33,42,11            # 33 GOSUB 39
2948,2953,34,43,6             # 34 RETURN
2954,2984,35,46,28            # 35 REM abbreviated move (eg. N)
2985,2996,36,47,7             # 36 D$ = I$
2997,3005,37,48,11            # 37 GOSUB 39
3006,3011,38,49,6             # 38 RETURN
3012,3052,39,53,38            # 39 REM go to the new player location (PL)
3053,3092,40,54,44            # 40 IF D$ = "n" THEN PL = VAL(MID$(EX$(PL),1,2))
3093,3132,41,55,44            # 41 IF D$ = "e" THEN PL = VAL(MID$(EX$(PL),3,2))
3133,3172,42,56,44            # 42 IF D$ = "s" THEN PL = VAL(MID$(EX$(PL),5,2))
3173,3212,43,57,44            # 43 IF D$ = "w" THEN PL = VAL(MID$(EX$(PL),7,2))
3213,3252,44,58,44            # 44 IF D$ = "u" THEN PL = VAL(MID$(EX$(PL),9,2))
3253,3293,45,59,45            # 45 IF D$ = "d" THEN PL = VAL(MID$(EX$(PL),11,2))
3294,3299,46,61,6             # 46 RETURN
3300,3336,47,64,34            # 47 REM objects the player is carrying
3337,3345,48,65,8             # 48 PRINT ""
3346,3381,49,66,35            # 49 PRINT "Objects in your possession:"
3382,3464,50,67,105           # 50 FOR I = 0 TO OC-1 : REM check object location from the first object to object count
3465,3534,51,68,79            # 51 IF OL(I) = 0 THEN PRINT ". ";OB$(I) : REM if the object is in zero print it
3535,3542,52,69,6             # 52 NEXT I
3543,3551,53,71,6             # 53 GET I$
3552,3568,54,72,21            # 54 IF I$="" GOTO 53
3569,3574,55,73,6             # 55 RETURN
3575,3602,56,76,25            # 56 REM objects and locations
3603,3630,57,77,25            # 57 REM =====================
3631,3644,58,78,11            # 58 REM objects
3645,3658,59,79,11            # 59 DIM OB$(20)
3659,3679,60,80,16            # 60 OB$(0)="matches"
3680,3702,61,81,18            # 61 OB$(1)="brass key"
3703,3730,62,82,25            # 62 OC = 2 : REM object count
3731,3746,63,84,13            # 63 REM locations
3747,3760,64,85,11            # 64 DIM LO$(20)
3761,3783,65,86,18            # 65 LO$(0)="inventory"
3784,3811,66,87,23            # 66 LO$(1)="grand entrance"
3812,3830,67,88,14            # 67 LO$(2)="study"
3831,3856,68,89,23            # 68 RC = 3 : REM room count
3857,3881,69,91,22            # 69 REM object's locations
3882,3914,70,92,30            # 70 REM loc 0 = player's inventory
3915,3927,71,93,10            # 71 DIM OL(20)
3928,3939,72,94,7             # 72 OL(0)=0
3940,3951,73,95,7             # 73 OL(1)=1
3952,3968,74,97,14            # 74 REM exit names
3969,3981,75,98,10            # 75 DIM EN$(6)
3982,4000,76,99,14            # 76 EN$(0)="north"
4001,4018,77,100,13           # 77 EN$(1)="east"
4019,4037,78,101,14           # 78 EN$(2)="south"
4038,4055,79,102,13           # 79 EN$(3)="west"
4056,4071,80,103,11           # 80 EN$(4)="up"
4072,4089,81,104,13           # 81 EN$(5)="down"
4090,4106,82,107,14           # 82 REM room exits
4107,4124,83,108,15           # 83 REM N E S W U D
4125,4138,84,109,11           # 84 DIM EX$(20)
4139,4164,85,110,21           # 85 EX$(1)="000002000000"
4165,4190,86,111,21           # 86 EX$(2)="010000000000"
4191,4216,87,112,21           # 87 EX$(3)="000000000000"
4217,4229,88,116,10           # 88 REM player
4230,4242,89,117,10           # 89 REM ======
4243,4273,90,118,28           # 90 PL = 1 : REM player location
4274,4279,91,120,6            # 91 RETURN
