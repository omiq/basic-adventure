################################################################################
# MAP FILE
# generated file: DO NOT EDIT!
################################################################################

/home/chrisg/github/basic-adventure/src/main.bas
2049,2077,1,0,28              # 1 ? "{147}text adventure game"
2078,2086,2,2,10              # 2 GOSUB 40
2087,2100,3,6,13              # 3 PRINT LO$(PL)
2101,2182,4,7,98              # 4 FOR I = 0 TO OC : REM check object locations from the first object to object count
2183,2260,5,8,83              # 5 IF OL(I) = PL THEN PRINT OB$(I) : REM if the object is in current location print it
2261,2268,6,9,6               # 6 NEXT I
2269,2299,7,11,28             # 7 REM check each possible exit
2300,2338,8,12,45             # 8 IF MID$(EX$(PL),1,2)<>"00" THEN PRINT "north"
2339,2376,9,13,44             # 9 IF MID$(EX$(PL),3,2)<>"00" THEN PRINT "east"
2377,2415,10,14,45            # 10 IF MID$(EX$(PL),5,2)<>"00" THEN PRINT "south"
2416,2453,11,15,44            # 11 IF MID$(EX$(PL),7,2)<>"00" THEN PRINT "west"
2454,2489,12,16,42            # 12 IF MID$(EX$(PL),9,2)<>"00" THEN PRINT "up"
2490,2528,13,17,45            # 13 IF MID$(EX$(PL),11,2)<>"00" THEN PRINT "down"
2529,2546,14,21,17            # 14 PRINT "what now?"
2547,2555,15,22,8             # 15 INPUT I$
2556,2584,16,23,42            # 16 IF LEFT$(I$,3) = "go " THEN GOSUB 24
2585,2606,17,24,30            # 17 IF I$ = "n" THEN GOSUB 28
2607,2628,18,25,30            # 18 IF I$ = "e" THEN GOSUB 28
2629,2650,19,26,30            # 19 IF I$ = "s" THEN GOSUB 28
2651,2672,20,27,30            # 20 IF I$ = "w" THEN GOSUB 28
2673,2694,21,28,30            # 21 IF I$ = "u" THEN GOSUB 28
2695,2716,22,29,30            # 22 IF I$ = "d" THEN GOSUB 28
2717,2724,23,32,16            # 23 GOTO 3
2725,2776,24,35,49            # 24 REM fully written out move (eg. GO SOUTH or GO S)
2777,2795,25,36,17            # 25 D$ = MID$(I$,4,1)
2796,2804,26,37,11            # 26 GOSUB 32
2805,2810,27,38,6             # 27 RETURN
2811,2841,28,41,28            # 28 REM abbreviated move (eg. N)
2842,2853,29,42,7             # 29 D$ = I$
2854,2862,30,43,11            # 30 GOSUB 32
2863,2868,31,44,6             # 31 RETURN
2869,2909,32,48,38            # 32 REM go to the new player location (PL)
2910,2949,33,49,44            # 33 IF D$ = "n" THEN PL = VAL(MID$(EX$(PL),1,2))
2950,2989,34,50,44            # 34 IF D$ = "e" THEN PL = VAL(MID$(EX$(PL),3,2))
2990,3029,35,51,44            # 35 IF D$ = "s" THEN PL = VAL(MID$(EX$(PL),5,2))
3030,3069,36,52,44            # 36 IF D$ = "w" THEN PL = VAL(MID$(EX$(PL),7,2))
3070,3109,37,53,44            # 37 IF D$ = "u" THEN PL = VAL(MID$(EX$(PL),9,2))
3110,3150,38,54,45            # 38 IF D$ = "d" THEN PL = VAL(MID$(EX$(PL),11,2))
3151,3156,39,56,6             # 39 RETURN
3157,3184,40,59,25            # 40 REM objects and locations
3185,3212,41,60,25            # 41 REM =====================
3213,3226,42,61,11            # 42 REM objects
3227,3240,43,62,11            # 43 DIM OB$(20)
3241,3261,44,63,16            # 44 OB$(0)="matches"
3262,3284,45,64,18            # 45 OB$(1)="brass key"
3285,3312,46,65,25            # 46 OC = 2 : REM object count
3313,3328,47,67,13            # 47 REM locations
3329,3342,48,68,11            # 48 DIM LO$(20)
3343,3365,49,69,18            # 49 LO$(0)="inventory"
3366,3393,50,70,23            # 50 LO$(1)="grand entrance"
3394,3412,51,71,14            # 51 LO$(2)="study"
3413,3438,52,72,23            # 52 RC = 3 : REM room count
3439,3463,53,74,22            # 53 REM object's locations
3464,3496,54,75,30            # 54 REM loc 0 = player's inventory
3497,3509,55,76,10            # 55 DIM OL(20)
3510,3521,56,77,7             # 56 OL(0)=0
3522,3533,57,78,7             # 57 OL(1)=1
3534,3550,58,80,14            # 58 REM exit names
3551,3563,59,81,10            # 59 DIM EN$(6)
3564,3582,60,82,14            # 60 EN$(0)="north"
3583,3600,61,83,13            # 61 EN$(1)="east"
3601,3619,62,84,14            # 62 EN$(2)="south"
3620,3637,63,85,13            # 63 EN$(3)="west"
3638,3653,64,86,11            # 64 EN$(4)="up"
3654,3671,65,87,13            # 65 EN$(5)="down"
3672,3688,66,90,14            # 66 REM room exits
3689,3706,67,91,15            # 67 REM N E S W U D
3707,3720,68,92,11            # 68 DIM EX$(20)
3721,3746,69,93,21            # 69 EX$(1)="000002000000"
3747,3772,70,94,21            # 70 EX$(2)="010000000000"
3773,3798,71,95,21            # 71 EX$(3)="000000000000"
3799,3811,72,99,10            # 72 REM player
3812,3824,73,100,10           # 73 REM ======
3825,3855,74,101,28           # 74 PL = 1 : REM player location
3856,3861,75,103,6            # 75 RETURN
