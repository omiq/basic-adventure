################################################################################
# MAP FILE
# generated file: DO NOT EDIT!
################################################################################

/home/chrisg/github/basic-adventure/src/main.bas
2049,2077,1,0,28              # 1 ? "{147}text adventure game"
2078,2086,2,2,10              # 2 GOSUB 37
2087,2100,3,6,13              # 3 PRINT LO$(PL)
2101,2182,4,7,98              # 4 FOR I = 0 TO OC : REM check object locations from the first object to object count
2183,2260,5,8,83              # 5 IF OL(I) = PL THEN PRINT OB$(I) : REM if the object is in current location print it
2261,2268,6,9,6               # 6 NEXT I
2269,2299,7,11,28             # 7 REM check each possible exit
2300,2338,8,12,45             # 8 IF MID$(EX$(PL),1,2)<>"00" THEN PRINT "north"
2339,2376,9,13,44             # 9 IF MID$(EX$(PL),3,2)<>"00" THEN PRINT "east"
2377,2415,10,14,45            # 10 IF MID$(EX$(PL),5,2)<>"00" THEN PRINT "south"
2416,2453,11,15,44            # 11 IF MID$(EX$(PL),7,2)<>"00" THEN PRINT "west"
2454,2489,12,16,42            # 12 IF MID$(EX$(PL),9,2)<>"00" THEN PRINT "up"
2490,2528,13,17,45            # 13 IF MID$(EX$(PL),11,2)<>"00" THEN PRINT "down"
2529,2546,14,21,17            # 14 PRINT "what now?"
2547,2555,15,22,8             # 15 INPUT I$
2556,2584,16,23,42            # 16 IF LEFT$(I$,3) = "go " THEN GOSUB 24
2585,2606,17,24,30            # 17 IF I$ = "n" THEN GOSUB 27
2607,2628,18,25,30            # 18 IF I$ = "e" THEN GOSUB 27
2629,2650,19,26,30            # 19 IF I$ = "s" THEN GOSUB 27
2651,2672,20,27,30            # 20 IF I$ = "w" THEN GOSUB 27
2673,2694,21,28,30            # 21 IF I$ = "u" THEN GOSUB 27
2695,2716,22,29,30            # 22 IF I$ = "d" THEN GOSUB 27
2717,2724,23,32,16            # 23 GOTO 3
2725,2743,24,35,17            # 24 D$ = MID$(I$,4,1)
2744,2752,25,36,11            # 25 GOSUB 30
2753,2758,26,37,6             # 26 RETURN
2759,2770,27,40,7             # 27 D$ = I$
2771,2779,28,41,11            # 28 GOSUB 30
2780,2785,29,42,6             # 29 RETURN
2786,2825,30,47,44            # 30 IF D$ = "n" THEN PL = VAL(MID$(EX$(PL),1,2))
2826,2865,31,48,44            # 31 IF D$ = "e" THEN PL = VAL(MID$(EX$(PL),3,2))
2866,2905,32,49,44            # 32 IF D$ = "s" THEN PL = VAL(MID$(EX$(PL),5,2))
2906,2945,33,50,44            # 33 IF D$ = "w" THEN PL = VAL(MID$(EX$(PL),7,2))
2946,2985,34,51,44            # 34 IF D$ = "u" THEN PL = VAL(MID$(EX$(PL),9,2))
2986,3026,35,52,45            # 35 IF D$ = "d" THEN PL = VAL(MID$(EX$(PL),11,2))
3027,3032,36,54,6             # 36 RETURN
3033,3060,37,57,25            # 37 REM objects and locations
3061,3088,38,58,25            # 38 REM =====================
3089,3102,39,59,11            # 39 REM objects
3103,3116,40,60,11            # 40 DIM OB$(20)
3117,3137,41,61,16            # 41 OB$(0)="matches"
3138,3160,42,62,18            # 42 OB$(1)="brass key"
3161,3188,43,63,25            # 43 OC = 2 : REM object count
3189,3204,44,65,13            # 44 REM locations
3205,3218,45,66,11            # 45 DIM LO$(20)
3219,3241,46,67,18            # 46 LO$(0)="inventory"
3242,3269,47,68,23            # 47 LO$(1)="grand entrance"
3270,3288,48,69,14            # 48 LO$(2)="study"
3289,3314,49,70,23            # 49 RC = 3 : REM room count
3315,3339,50,72,22            # 50 REM object's locations
3340,3372,51,73,30            # 51 REM loc 0 = player's inventory
3373,3385,52,74,10            # 52 DIM OL(20)
3386,3397,53,75,7             # 53 OL(0)=0
3398,3409,54,76,7             # 54 OL(1)=1
3410,3426,55,78,14            # 55 REM exit names
3427,3439,56,79,10            # 56 DIM EN$(6)
3440,3458,57,80,14            # 57 EN$(0)="north"
3459,3476,58,81,13            # 58 EN$(1)="east"
3477,3495,59,82,14            # 59 EN$(2)="south"
3496,3513,60,83,13            # 60 EN$(3)="west"
3514,3529,61,84,11            # 61 EN$(4)="up"
3530,3547,62,85,13            # 62 EN$(5)="down"
3548,3564,63,88,14            # 63 REM room exits
3565,3582,64,89,15            # 64 REM N E S W U D
3583,3596,65,90,11            # 65 DIM EX$(20)
3597,3622,66,91,21            # 66 EX$(1)="000002000000"
3623,3648,67,92,21            # 67 EX$(2)="010000000000"
3649,3674,68,93,21            # 68 EX$(3)="000000000000"
3675,3687,69,97,10            # 69 REM player
3688,3700,70,98,10            # 70 REM ======
3701,3731,71,99,28            # 71 PL = 1 : REM player location
3732,3737,72,101,6            # 72 RETURN
