################################################################################
# MAP FILE
# generated file: DO NOT EDIT!
################################################################################

/home/chrisg/github/basic-adventure/src/main.bas
2049,2116,1,0,65              # 1 REM text adventure game by chris garrett 2024 retrogamecoders.com
2117,2126,2,2,10              # 2 GOSUB 103
2127,2202,3,5,96              # 3 IF PL=0 THEN PL = PP : REM player location can not be 00 as that is inventory
2203,2264,4,6,91              # 4 PP = PL : REM backup the location in case illegal move made
2265,2289,5,7,49              # 5 PRINT "{147}{5}{18}";LO$(PL);" {146}"
2290,2298,6,8,8               # 6 PRINT ""
2299,2325,7,9,42              # 7 PRINT "{5}Objects visible:{154}"
2326,2409,8,10,106            # 8 FOR I = 0 TO OC-1 : REM check object locations from the first object to object count
2410,2492,9,11,91             # 9 IF OL(I) = PL THEN PRINT ". ";OB$(I) : REM if the object is in current location print it
2493,2500,10,12,6             # 10 NEXT I
2501,2509,11,13,8             # 11 PRINT ""
2510,2536,12,14,42            # 12 PRINT "{5}exits available:{154}"
2537,2567,13,15,28            # 13 REM check each possible exit
2568,2608,14,16,47            # 14 IF MID$(EX$(PL),1,2)<>"00" THEN PRINT ". north"
2609,2648,15,17,46            # 15 IF MID$(EX$(PL),3,2)<>"00" THEN PRINT ". east"
2649,2689,16,18,47            # 16 IF MID$(EX$(PL),5,2)<>"00" THEN PRINT ". south"
2690,2729,17,19,46            # 17 IF MID$(EX$(PL),7,2)<>"00" THEN PRINT ". west"
2730,2767,18,20,44            # 18 IF MID$(EX$(PL),9,2)<>"00" THEN PRINT ". up"
2768,2808,19,21,47            # 19 IF MID$(EX$(PL),11,2)<>"00" THEN PRINT ". down"
2809,2818,20,25,5             # 20 I$=""
2819,2827,21,26,8             # 21 PRINT ""
2828,2847,22,27,36            # 22 PRINT "{158}what now?{154}"
2848,2856,23,28,8             # 23 INPUT I$
2857,2885,24,29,42            # 24 IF LEFT$(I$,3) = "go " THEN GOSUB 38
2886,2907,25,30,30            # 25 IF I$ = "n" THEN GOSUB 42
2908,2929,26,31,30            # 26 IF I$ = "e" THEN GOSUB 42
2930,2951,27,32,30            # 27 IF I$ = "s" THEN GOSUB 42
2952,2973,28,33,30            # 28 IF I$ = "w" THEN GOSUB 42
2974,2995,29,34,30            # 29 IF I$ = "u" THEN GOSUB 42
2996,3017,30,35,30            # 30 IF I$ = "d" THEN GOSUB 42
3018,3044,31,36,41            # 31 IF LEFT$(I$,1) = "i" THEN GOSUB 54
3045,3074,32,37,44            # 32 IF LEFT$(I$,4) = "get " THEN GOSUB 69
3075,3105,33,38,46            # 33 IF LEFT$(I$,5) = "take " THEN GOSUB 65
3106,3136,34,39,46            # 34 IF LEFT$(I$,5) = "drop " THEN GOSUB 89
3137,3184,35,40,64            # 35 IF LEFT$(I$,4) = "look" THEN ?"":PRINT RD$(PL):?"":GOSUB 61
3185,3212,36,41,39            # 36 IF LEFT$(I$,1) = "q" THEN GOTO 160
3213,3220,37,43,16            # 37 GOTO 3
3221,3272,38,46,49            # 38 REM fully written out move (eg. GO SOUTH or GO S)
3273,3291,39,47,17            # 39 D$ = MID$(I$,4,1)
3292,3300,40,48,11            # 40 GOSUB 46
3301,3306,41,49,6             # 41 RETURN
3307,3337,42,52,28            # 42 REM abbreviated move (eg. N)
3338,3349,43,53,7             # 43 D$ = I$
3350,3358,44,54,11            # 44 GOSUB 46
3359,3364,45,55,6             # 45 RETURN
3365,3405,46,59,38            # 46 REM go to the new player location (PL)
3406,3445,47,60,44            # 47 IF D$ = "n" THEN PL = VAL(MID$(EX$(PL),1,2))
3446,3485,48,61,44            # 48 IF D$ = "e" THEN PL = VAL(MID$(EX$(PL),3,2))
3486,3525,49,62,44            # 49 IF D$ = "s" THEN PL = VAL(MID$(EX$(PL),5,2))
3526,3565,50,63,44            # 50 IF D$ = "w" THEN PL = VAL(MID$(EX$(PL),7,2))
3566,3605,51,64,44            # 51 IF D$ = "u" THEN PL = VAL(MID$(EX$(PL),9,2))
3606,3646,52,65,45            # 52 IF D$ = "d" THEN PL = VAL(MID$(EX$(PL),11,2))
3647,3652,53,67,6             # 53 RETURN
3653,3689,54,70,34            # 54 REM objects the player is carrying
3690,3698,55,71,8             # 55 PRINT ""
3699,3734,56,72,35            # 56 PRINT "Objects in your possession:"
3735,3817,57,73,105           # 57 FOR I = 0 TO OC-1 : REM check object location from the first object to object count
3818,3887,58,74,79            # 58 IF OL(I) = 0 THEN PRINT ". ";OB$(I) : REM if the object is in zero print it
3888,3895,59,75,6             # 59 NEXT I
3896,3904,60,76,8             # 60 PRINT ""
3905,3956,61,79,71            # 61 PRINT "{159}{18}        press a key to continue         {146}"
3957,3965,62,81,6             # 62 GET I$
3966,3982,63,82,27            # 63 IF I$="" GOTO 62
3983,3988,64,83,6             # 64 RETURN
3989,4020,65,86,29            # 65 REM alternative action to get
4021,4035,66,87,10            # 66 F=-1:R$=""
4036,4079,67,88,52            # 67 R$ = MID$(I$,6) : REM r$ is object requested
4080,4088,68,89,13            # 68 GOTO 72
4089,4152,69,92,61            # 69 REM allow player to get available object and put in inventory
4153,4167,70,93,10            # 70 F=-1:R$=""
4168,4211,71,94,52            # 71 R$ = MID$(I$,5) : REM r$ is object requested
4212,4235,72,97,21            # 72 REM get the object id
4236,4252,73,98,15            # 73 FOR I = 1 TO OC
4253,4292,74,99,41            # 74 IF OB$(I-1) = R$ THEN F=I : REM it exists
4293,4300,75,100,6            # 75 NEXT I
4301,4321,76,102,18           # 76 REM can't find it?
4322,4330,77,103,8            # 77 PRINT ""
4331,4407,78,104,92           # 78 IF F=-1 THEN PRINT "can't see that here, check spelling and be specific?" : GOTO 86
4408,4431,79,105,29           # 79 IF OL(F-1)=PL THEN GOTO 83
4432,4482,80,106,66           # 80 IF OL(F-1)=0 THEN PRINT "you already have that" : GOTO 86
4483,4519,81,107,36           # 81 PRINT "I can't see that around here"
4520,4528,82,108,16           # 82 GOTO 86
4529,4597,83,111,66           # 83 OL(F-1)=0 : REM set the object location to inventory aka room zero
4598,4606,84,112,8            # 84 PRINT ""
4607,4633,85,113,26           # 85 PRINT "got the ";OBJ$(F-1)
4634,4642,86,116,8            # 86 PRINT ""
4643,4651,87,117,13           # 87 GOSUB 61
4652,4657,88,118,6            # 88 RETURN
4658,4699,89,122,39           # 89 REM drop objects the player is carrying
4700,4714,90,124,10           # 90 F=-1:R$=""
4715,4758,91,125,52           # 91 R$ = MID$(I$,6) : REM r$ is object requested
4759,4782,92,127,21           # 92 REM get the object id
4783,4799,93,128,15           # 93 FOR I = 1 TO OC
4800,4839,94,129,41           # 94 IF OB$(I-1) = R$ THEN F=I : REM it exists
4840,4847,95,130,6            # 95 NEXT I
4848,4868,96,132,18           # 96 REM can't find it?
4869,4877,97,133,8            # 97 PRINT ""
4878,4959,98,134,97           # 98 IF F=-1 THEN PRINT "can't seem to find that, check spelling and be specific?" : GOTO 101
4960,5015,99,135,71           # 99 IF OL(F-1)=0 THEN PRINT "ok, dropped!" : OL(F-1)=PL : GOTO 101
5016,5062,100,136,46          # 100 PRINT "no can do, are you sure you have that?"
5063,5071,101,140,13          # 101 GOSUB 61
5072,5077,102,141,6           # 102 RETURN
5078,5105,103,145,25          # 103 REM objects and locations
5106,5133,104,146,25          # 104 REM =====================
5134,5147,105,147,11          # 105 REM objects
5148,5175,106,148,25          # 106 OC = 2 : REM object count
5176,5189,107,149,11          # 107 DIM OB$(OC)
5190,5210,108,150,16          # 108 OB$(0)="matches"
5211,5233,109,151,18          # 109 OB$(1)="brass key"
5234,5249,110,153,13          # 110 REM locations
5250,5275,111,154,23          # 111 RC = 3 : REM room count
5276,5289,112,155,11          # 112 DIM LO$(RC)
5290,5312,113,156,18          # 113 LO$(0)="inventory"
5313,5339,114,157,22          # 114 LO$(1)="dank basement"
5340,5365,115,158,21          # 115 LO$(2)="furnace room"
5366,5392,116,159,22          # 116 LO$(3)="service hatch"
5393,5416,117,161,21          # 117 REM room descriptions
5417,5430,118,162,11          # 118 DIM RD$(RC)
5431,5444,119,163,9           # 119 RD$(0)=""
5445,5588,120,164,139         # 120 RD$(1)="a chillingly damp, bare-bricked room with poured cement floor and timber beamed ceiling. window frames are boarded along one wall."
5589,5745,121,165,152         # 121 RD$(2)="this room is obviously a later addition, thrown together with drywall, and just large enough to section off the furnace from the main basement."
5746,5850,122,166,100         # 122 RD$(3)="up above the furnace, this tiny space must have been built to allow access to hvac ducting."
5851,5875,123,169,22          # 123 REM object's locations
5876,5908,124,170,30          # 124 REM loc 0 = player's inventory
5909,5921,125,171,10          # 125 DIM OL(OC)
5922,5933,126,172,7           # 126 OL(0)=0
5934,5945,127,173,7           # 127 OL(1)=1
5946,5962,128,175,14          # 128 REM exit names
5963,5975,129,176,10          # 129 DIM EN$(6)
5976,5994,130,177,14          # 130 EN$(0)="north"
5995,6012,131,178,13          # 131 EN$(1)="east"
6013,6031,132,179,14          # 132 EN$(2)="south"
6032,6049,133,180,13          # 133 EN$(3)="west"
6050,6065,134,181,11          # 134 EN$(4)="up"
6066,6083,135,182,13          # 135 EN$(5)="down"
6084,6100,136,185,14          # 136 REM room exits
6101,6122,137,186,19          # 137 REM     N E S W U D
6123,6136,138,187,11          # 138 DIM EX$(20)
6137,6162,139,188,21          # 139 EX$(1)="000002000000"
6163,6188,140,189,21          # 140 EX$(2)="010000000300"
6189,6214,141,190,21          # 141 EX$(3)="000000000002"
6215,6227,142,194,10          # 142 REM player
6228,6240,143,195,10          # 143 REM ======
6241,6271,144,196,28          # 144 PL = 1 : REM player location
6272,6311,145,197,37          # 145 PP = 1 : REM player previous location
6312,6337,146,201,27          # 146 POKE 53281,6 : POKE 53280,6
6338,6349,147,202,43          # 147 ? "{147}{5}" 
6350,6383,148,203,29          # 148 ? "             murder house"
6384,6422,149,204,34          # 149 ? "         a text adventure game"
6423,6458,150,205,31          # 150 ? "           by chris garrett"
6459,6488,151,206,25          # 151 ? "                 2024"
6489,6496,152,207,3           # 152 ?""
6497,6506,153,208,15          # 153 ? "{155}"
6507,6544,154,209,33          # 154 ? "          retrogamecoders.com"
6545,6552,155,210,3           # 155 ?""
6553,6560,156,211,3           # 156 ?""
6561,6568,157,212,3           # 157 ?""
6569,6577,158,214,13          # 158 GOSUB 61
6578,6583,159,216,6           # 159 RETURN
6584,6610,160,219,28          # 160 POKE 53281,6 : POKE 53280,14
6611,6629,161,220,32          # 161 PRINT "{147}{154}Goodbye!"
6630,6638,162,221,8           # 162 PRINT ""
6639,6649,163,222,12          # 163 PRINT FRE(0)
6650,6658,164,223,8           # 164 PRINT ""
